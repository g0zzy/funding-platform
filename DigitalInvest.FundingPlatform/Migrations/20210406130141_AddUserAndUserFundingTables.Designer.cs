// <auto-generated />
using System;
using DigitalInvest.FundingPlatform.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DigitalInvest.FundingPlatform.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210406130141_AddUserAndUserFundingTables")]
    partial class AddUserAndUserFundingTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DigitalInvest.FundingPlatform.DataAccess.Entitities.Funding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Investment")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Target")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Fundings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a21525c-82ff-4f35-8454-721536faad8d"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 2, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 1",
                            Target = 945985.0
                        },
                        new
                        {
                            Id = new Guid("c85ebf69-0027-4b58-8860-6acab9c10e69"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 4, 28, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 2",
                            Target = 907841.0
                        },
                        new
                        {
                            Id = new Guid("82f91880-36c3-4497-861c-f03049b1eabd"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 12, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 3",
                            Target = 950173.0
                        },
                        new
                        {
                            Id = new Guid("5bca3eba-41f2-452c-8bd4-f529d5dbc6df"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 10, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 4",
                            Target = 978610.0
                        },
                        new
                        {
                            Id = new Guid("373c3bdb-d801-498b-8b18-f3bad23c89b2"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 5",
                            Target = 999466.0
                        },
                        new
                        {
                            Id = new Guid("90e0d05b-4dfe-4110-ba50-979f1a0990e5"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 1, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 6",
                            Target = 838081.0
                        },
                        new
                        {
                            Id = new Guid("f061b128-0ccd-4d3f-aa56-386b042a36c5"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 4, 29, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 7",
                            Target = 627099.0
                        },
                        new
                        {
                            Id = new Guid("ee3ebda2-06a6-43b9-a0f9-c30ab8ae82df"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 7, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 8",
                            Target = 981597.0
                        },
                        new
                        {
                            Id = new Guid("e050eddb-c19f-4322-9c44-fe399a4588cb"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 4, 29, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 9",
                            Target = 885480.0
                        },
                        new
                        {
                            Id = new Guid("4f2a1f46-e471-49d2-9e5c-1ec995a6e4ce"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 9, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 10",
                            Target = 808577.0
                        },
                        new
                        {
                            Id = new Guid("9c9f3618-2a50-4bbb-8e2b-c014dbb960ac"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 4, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 11",
                            Target = 614505.0
                        },
                        new
                        {
                            Id = new Guid("214ec603-f538-4153-a1bb-1744068cbb6b"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 12, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 12",
                            Target = 897899.0
                        },
                        new
                        {
                            Id = new Guid("2f7a7fd7-6b46-4bbb-a2fc-f88eda0fef8b"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 4, 27, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 13",
                            Target = 628771.0
                        },
                        new
                        {
                            Id = new Guid("f6323637-4de4-4778-90c8-8ec70a3f9260"),
                            CreatedOn = new DateTime(2021, 4, 6, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            ExpirationDate = new DateTime(2021, 5, 1, 13, 1, 40, 80, DateTimeKind.Utc).AddTicks(6032),
                            Investment = 0.0,
                            Name = "Property 14",
                            Target = 624257.0
                        });
                });

            modelBuilder.Entity("DigitalInvest.FundingPlatform.DataAccess.Entitities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DigitalInvest.FundingPlatform.DataAccess.Entitities.UserFunding", b =>
                {
                    b.Property<Guid>("FundingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("FundingId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFundings");
                });

            modelBuilder.Entity("DigitalInvest.FundingPlatform.DataAccess.Entitities.UserFunding", b =>
                {
                    b.HasOne("DigitalInvest.FundingPlatform.DataAccess.Entitities.Funding", "Funding")
                        .WithMany("UserFundings")
                        .HasForeignKey("FundingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalInvest.FundingPlatform.DataAccess.Entitities.User", "User")
                        .WithMany("UserFundings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
